function resetField(url, list, classField = "editField", date_new = null, field_new = null, success_action = null) {
    resetError();
    $('.' + classField + ' .field_').each(function () {
        var thisField = $(this);
        if (classField != "editField") {
            var tr = thisField.closest('tr');
        } else {
            var tr = thisField.closest('table').closest('tr').prev('tr')
        }

        var id = thisField.closest('tr').data('id')
        var tblist = thisField.closest('table').attr('id')
        var field = thisField.attr('name')
        var type = thisField.attr('type')
        var change = true;
        var val_old = HasValue($('#' + tblist).DataTable().row(tr).data()[field]);


        switch (type) {
            case "date":
                if (date_new != null) {
                    if (field_new == field) {
                        var date = date_new;
                    } else {
                        change = false;
                    }
                } else {
                    var date = $('#date_' + field + id).calendar("get date");
                }
                if (date != null) {
                    var valeur = formatDate(date, 'YYYY-MM-DD');
                } else {
                    var valeur = '';
                }
                break;

            default:
                var valeur = thisField.val();
                break;
        }
        if (val_old != valeur && change == true) {
            var datas = new FormData();
            datas.append(field, valeur);
            ajax_post(datas, `${url}`,
                (response) => {
                    if (response.ok) {
                        if (response._row) {
                            $(`.appendInputField`).remove()
                            $(`.appendField${id}`).remove()
                            $('#' + tblist).DataTable().row(tr).data(response._row);
                            $(`#tfoot_${tblist}_input`).change();
                            $('.load_foot').change();
                            setTimeout(() => {
                                $(`#${response._row.id}`).addClass('new-row')
                            }, 700);
                        } else {
                            $('#' + tblist).DataTable().ajax.reload();
                        }
                        if (success_action != null) {
                            success_action(response);
                        }
                    } else {
                        console.log(response.error);
                        setError(response.error_messages, 'msg');
                    }
                }, null, true);
        } else {
            if (classField != "editField") {
                var data_row_b = $('#' + tblist).DataTable().row(tr).data();
                $('#' + tblist).DataTable().row(tr).data(data_row_b);
                thisField.remove()
            }
        }
    })
}

/**
 * display field input 
 * @param {*} field 
 * @param {*} id 
 * @param {*} value 
 * @param {*} type 
 * @param {*} Options 
 */
function chargeInput(field, id, value, type, model, options = null) {
    var for_field = (field == 'Stock') ? 'CodeArticle' : field;
    switch (type) {
        case 'number':
            return '<span class="appendInputField"><div class="ui fluid input mini"><input style="text-align:right" data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" value="' + value + '" class="field_ form-control input-editLine ' + field + '" type="number" row="1" autofocus/></div> </span> <span style="" class=""></span>'
            break;
        case 'decimal':
            return '<div class="appendInputField"><div class="ui fluid input mini"><input style="text-align:right" data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" value="' + value + '" class="field_ form-control input-editLine ' + field + '" type="number" row="1" step="0.01" autofocus/> <span style="" class=""></span> </div></div>'
            break;
        case 'textarea':
            return '<span class="appendInputField"><div class="ui fluid input mini"><textarea data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" class="field_ form-control md-textarea ' + field + '" placeholder="' + field + '" type="text" row="1" autofocus>' + value + '</textarea>  <span style="" class=""></span></div>'
            break;
        case 'text':
            return '<span class="appendInputField"><div class="ui fluid input mini"><input style="" data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" class="field_ form-control input-editLine ' + field + '" placeholder="' + field + '" type="text" row="1" autofocus  value="' + value + '" style="padding:4px; font-size:11px !important; height:25px"/></div>  <span style="" class=""></span>'
            break;
        case 'date':
            return '<span class="appendInputField"><div class="ui fluid input mini"><input style="" data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" class="field_ form-control input-editLine ' + field + '  BSdate" type="text" row="1" autofocus  value="' + value + '"/>  <span style="" class=""></span></div>'
            break;
        case 'email':
            return '<span class="appendInputField"><div class="ui fluid input mini"><input style="" data-model="' + model + '" name="' + field + '" id="msg' + field + '_popup" class="field_ form-control input-editLine ' + field + '" type="email" row="1" autofocus  value="' + value + '"/>  <span style="" class=""></span></div>'
            break;
        case 'drop':
            var options_str = ``;
            options.split('|').forEach((options) => {
                var val = options.includes(";") ? options.substr(0, options.indexOf(';')) : options;
                var op = options.includes(";") ? options.split(';')[1] : options;
                options_str += `<option value='${val}'${value == val ? 'selected' : ''} >${op}</option>`;
            })
            return '<span class="appendInputField">' +
                '<select  data-model="' + model + '" class="ui search fluid dropdown field_ ' + field + '" id="' + field + '' + id + '" style="padding:4px; font-size:11px !important; height:25px">' +
                options_str +
                '</select>' +
                '</span ><span style="" class="msgError msg' + for_field + '_M"></span>';
            break;

        default:
            break;
    }
}

/* show field input */
$(document).on('dblclick', '.editFieldLine', function (e) {
    e.preventDefault();
    var self = $(this);
    var id = self.closest('tr').data('id');
    var list = self.closest('table').attr('id');
    if (self.find('input').length == 0) {
        var columnChange = self.find('.inline');
        var appends = columnChange.attr('data-appends') != undefined ? columnChange.attr('data-appends') : '';
        var model = columnChange.data('model') + '/' + id + '?methode=savewhat&' + appends
        var type = columnChange.attr('data-type');
        var field = columnChange.attr('data-field');
        var value = columnChange.attr('data-value') != undefined ? columnChange.find('span').attr('data-value') : columnChange.text();
        var options = null;
        if (type == "drop") {
            options = columnChange.attr('data-options');
        }
        if (columnChange.length == 1) {
            resetField(model, list, 'editFieldLine');
            self.html(chargeInput(field, id, value, type, model, options))
        }
        $('#' + field + '' + id).focusTextToEnd()

    }
})

/* Outfocus field  */
$(document).on('focusout', '.editFieldLine .field_', function (e) {
    var self = $(this);
    var columnChange = self.find('.inline');
    var appends = columnChange.attr('data-appends') != undefined ? columnChange.attr('data-appends') : '';
    var model = self.data('model') + '?methode=savewhat&' + appends;
    var list = self.closest('table').attr('id');
    resetField(model, list, 'editFieldLine', null, null, (res) => {
    });
})

/* Outfocus field  */
$(document).on('change', '.editFieldLine .field_', function (e) {
    var self = $(this);
    var list = self.attr('id');
    $(`#${list}`).blur();


    // resetField(model, list, 'editFieldLine', null, null, (res) => {
    // });
})

/* Event change field*/
$(document).on("keyup", ".editFieldLine .field_", function (event) {
    var self = $(this);
    var columnChange = self.closest('td');
    var appends = columnChange.attr('data-appends') != undefined ? '?' + columnChange.attr('data-appends') : '';
    var model = self.data('model') + '?methode=savewhat&' + appends;
    var list = columnChange.attr('data-list');
    if (event.keyCode === 13) {
        self.blur()
    }
});